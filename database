from sqlalchemy import create_engine
from sqlalchemy.engine import URL
from sqlalchemy.orm import DeclarativeBase
from sqlalchemy.orm import sessionmaker

url = URL.create(
    drivername="postgresql",
    username="postgres",
    host="localhost",
    database="postgres",
    password="postgres",
)

engine = create_engine(url, echo=False)
connection = engine.connect()
session = sessionmaker(engine)


class Base(DeclarativeBase):
    pass

    # repr_cols_num = 10
    # repr_cols = tuple()
    #
    # def __repr__(self):
    #     cols = []
    #     for idx, col in enumerate(self.__table__.columns.keys()):
    #         if col in self.repr_cols or idx < self.repr_cols_num:
    #             cols.append(f'{col}={getattr(self, col)}')
    #
    #     return f'<{self.__class__.__name__} {", ".join(cols)}>'
